awesome webGL MMORTS with an infinite procedurally generated map.

tech stack:
	backend:
		nodejs
		grpc
		rethinkdb

	frontend:
		react
		threejs

current task:
	trying out docker and becoming more microservice-y
	fix up auth stuff now that the game is more seriously working
	polishing and bug fixing for v1.0
	cancel ghost feature
	have units actually use fuel
	time left for fuel usage on units

current bugs:
	unit movement is a little jumpy on the client when server ticks are on time

TODO:
	have a 'locking' table on the chunk document for unit positions
		use this table to keep unit movement locked
		also use this table to speed up the function 'getUnitsAtCHunk'
	watch user table for changes and push updates
	dummy DB interface to allow testing modules in production without actually writing changes
	properly flowtype the entire codebase
	some sort of a distributed locking system for unit movement? maybe lock unit movement to the chunk document
	work through TODOs in code and refactor things that I was too lazy to do properly the first time around
	work on documentation
	SSAO lighting effects (client)
	better models (client)
	textures (client)
	color or flag system (client & server)
	lines between units showing how resources are being automatically delivered. (client)
	cancel ghost feature (server)
	trade routes (both client and server)
	music (epic guitar stuffs of course)
