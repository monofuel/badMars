webGL multiplayer rts game in development

current task:
	re-writing all server-side code more organized in server/
	switching to rethinkDB
	switching to microservice architecture


documentation:
	the badmars planet viewer is being documented with codo, documentation
	documentation is in public/js/badmars/docs

TODO:
	try out microservice architecture with rethink and kubernetes
	perhaps some sort of world chunk streaming system? maybe with generation too.
	console acts buggy with supervisor
	web console would be cool
	admin page would be cool
	properly flowtype the entire client code
	work through TODOs in code and refactor things that i was too lazy to do properly the first time around
	work on documentation

	chat (client and server)
	SSAO lighting effects (client)
	better models (client)
	textures (client)
	color or flag system (client)
	top priority -> unit resource transfering (client and server)
	lines between units showing how resources are being automatically delivered. (client)
	fix common pathfinding hangups. (server)
	cancel ghost feature (server)
	trade routes (both client and server)
	rename 'oil' to 'fuel' (except for deposit)
	have units actually use fuel
	time left for fuel usage on units
	music
